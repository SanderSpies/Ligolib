export type indiceStorage = int;

export type indiceEntrypoints = ["Increment", int] | ["Decrement", int];

export type indiceFullReturn = [list<operation>, indiceStorage];

export let increment = ([param, store] : [int, indiceStorage]) : indiceFullReturn => {
    return [list([]) as list<operation>, store + param]
};

export let decrement = ([param, store] : [int, indiceStorage]) : indiceFullReturn => {
    return [list([]) as list<operation>, store - param]
};

let indiceMain = ([ep, store] : [indiceEntrypoints, indiceStorage]) : indiceFullReturn => {
    return match (ep, { 
        Increment: (p: int) => increment(p, store),
        Decrement: (p: int) => decrement(p, store)
    });
};

[@view] let indice_value = ([_params, store] : [unit, indiceStorage]) : int => { return store };
