{ parameter
    (or (or (lambda %changeAlgorithm int bool) (unit %executeAlgorithm))
        (or (int %receiveValue) (unit %requestValue))) ;
  storage
    (pair (pair (lambda %algorithm int bool) (address %indiceAddress)) (bool %result)) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { PAIR ;
                 DUP ;
                 CDR ;
                 UNPAIR ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 UNIT ;
                 VIEW "indice_value" int ;
                 IF_NONE { PUSH string "unknown indice value" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CONTRACT %sendValue unit ;
                 IF_NONE
                   { PUSH string "the targeted contract has not entrypoint sendValue" ;
                     FAILWITH }
                   {} ;
                 PUSH mutez 0 ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }

