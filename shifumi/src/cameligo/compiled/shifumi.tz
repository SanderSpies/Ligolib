{ parameter
    (or (or (pair %createSession (set %players address) (nat %total_rounds))
            (pair %play (pair (chest %action) (nat %roundId)) (nat %sessionId)))
        (or (pair %revealPlay
               (pair (chest_key %player_key) (nat %player_secret))
               (pair (nat %roundId) (nat %sessionId)))
            (nat %stopSession))) ;
  storage
    (pair (nat %next_session)
          (map %sessions
             nat
             (pair (pair (pair (timestamp %asleep) (map %board nat (option address)))
                         (pair (nat %current_round)
                               (map %decoded_rounds
                                  nat
                                  (list (pair (or %action (or (unit %cisor) (unit %paper)) (unit %stone)) (address %player))))))
                   (pair (pair (set %players address)
                               (or %result (or (unit %draw) (unit %inplay)) (address %winner)))
                         (pair (map %rounds nat (list (pair (chest %action) (address %player))))
                               (nat %total_rounds)))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CDR ;
                 EMPTY_MAP nat (list (pair chest address)) ;
                 PAIR ;
                 UNIT ;
                 RIGHT unit ;
                 LEFT address ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 EMPTY_MAP nat (list (pair (or (or unit unit) unit) address)) ;
                 PUSH nat 1 ;
                 PAIR ;
                 EMPTY_MAP nat (option address) ;
                 PUSH int 600 ;
                 NOW ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP 3 ;
                 CAR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PUSH nat 1 ;
                 DIG 2 ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH string "Unknown session" ; FAILWITH } {} ;
                 PUSH string "Not allowed to play in this session" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF { DROP } { FAILWITH } ;
                 PUSH string "Wrong round parameter" ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { DUP ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NIL (pair chest address) ;
                     SENDER ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     CONS ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE }
                   { PUSH string "You already have played for this round" ;
                     PUSH bool False ;
                     SENDER ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     GET ;
                     IF_NONE
                       { DROP ; PUSH bool False }
                       { PUSH bool False ;
                         SWAP ;
                         ITER { SWAP ;
                                DUP ;
                                IF { SWAP ; DROP }
                                   { DROP ; SWAP ; DUP ; DUG 2 ; SWAP ; CDR ; COMPARE ; EQ } } ;
                         SWAP ;
                         DROP } ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     SENDER ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     CONS ;
                     SOME ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     UPDATE } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PUSH int 600 ;
                 NOW ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP 4 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 SOME ;
                 DIG 2 ;
                 CDR ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH string "Unknown session" ; FAILWITH } {} ;
                 PUSH string "Not allowed to play in this session" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF { DROP } { FAILWITH } ;
                 PUSH string "Wrong round parameter" ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH string "no actions registered" ; FAILWITH } {} ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 ITER { DROP ; PUSH nat 1 ; ADD } ;
                 PUSH string "a player has not played" ;
                 SWAP ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SIZE ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 SOME ;
                 SENDER ;
                 PAIR ;
                 LEFT (option chest) ;
                 LOOP_LEFT
                   { UNPAIR ;
                     SWAP ;
                     IF_NONE
                       { DROP ; NONE chest ; RIGHT (pair address (option (list (pair chest address)))) }
                       { DUP ;
                         IF_CONS { SWAP ; DROP ; SOME } { NONE (pair chest address) } ;
                         IF_NONE
                           { DROP 2 ; NONE chest ; RIGHT (pair address (option (list (pair chest address)))) }
                           { DUP 3 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             COMPARE ;
                             EQ ;
                             IF { SWAP ;
                                  DIG 2 ;
                                  DROP 2 ;
                                  CAR ;
                                  SOME ;
                                  RIGHT (pair address (option (list (pair chest address)))) }
                                { DROP ;
                                  IF_CONS { DROP ; SOME } { NONE (list (pair chest address)) } ;
                                  SWAP ;
                                  PAIR ;
                                  LEFT (option chest) } } } } ;
                 IF_NONE { PUSH string "Missing chest" ; FAILWITH } {} ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 OPEN_CHEST ;
                 IF_LEFT
                   { RIGHT (or unit unit) }
                   { IF { UNIT ; LEFT unit ; LEFT bytes } { UNIT ; RIGHT unit ; LEFT bytes } } ;
                 IF_LEFT
                   { IF_LEFT
                       { DROP ; PUSH string "Failed to open chest" ; FAILWITH }
                       { DROP ; PUSH string "Failed to open chest" ; FAILWITH } }
                   {} ;
                 UNPACK (or (or (unit %cisor) (unit %paper)) (unit %stone)) ;
                 IF_NONE { PUSH string "Failed to unpack the payload" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     NIL (pair (or (or unit unit) unit) address) ;
                     SENDER ;
                     DIG 3 ;
                     PAIR ;
                     CONS ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE }
                   { PUSH string "You already have revealed your play for this round" ;
                     PUSH bool False ;
                     SENDER ;
                     DUP 7 ;
                     CDR ;
                     CAR ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     GET ;
                     IF_NONE
                       { DROP ; PUSH bool False }
                       { PUSH bool False ;
                         SWAP ;
                         ITER { SWAP ;
                                DUP ;
                                IF { SWAP ; DROP }
                                   { DROP ; SWAP ; DUP ; DUG 2 ; SWAP ; CDR ; COMPARE ; EQ } } ;
                         SWAP ;
                         DROP } ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     SENDER ;
                     DIG 3 ;
                     PAIR ;
                     CONS ;
                     SOME ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     UPDATE } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PUSH int 600 ;
                 NOW ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { NIL (pair (or (or unit unit) unit) address) } {} ;
                 PUSH bool True ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 ITER { SWAP ;
                        UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        DIG 3 ;
                        DIG 3 ;
                        PUSH bool False ;
                        SWAP ;
                        ITER { SWAP ;
                               DUP ;
                               IF { SWAP ; DROP }
                                  { DROP ; SWAP ; DUP ; DUG 2 ; SWAP ; CDR ; COMPARE ; EQ } } ;
                        SWAP ;
                        DROP ;
                        DIG 2 ;
                        AND ;
                        PAIR } ;
                 CAR ;
                 PUSH bool True ;
                 SWAP ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PUSH nat 1 ;
                      DUP 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      ADD ;
                      PAIR ;
                      DUP 3 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      DUP 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH string "Missing actions for current_round" ; FAILWITH } {} ;
                      DUP ;
                      IF_CONS { SWAP ; DROP ; SOME } { NONE (pair (or (or unit unit) unit) address) } ;
                      IF_NONE { PUSH string "Missing actions for first player" ; FAILWITH } {} ;
                      SWAP ;
                      IF_CONS { DROP ; SOME } { NONE (list (pair (or (or unit unit) unit) address)) } ;
                      IF_NONE { PUSH string "Missing actions for second player" ; FAILWITH } {} ;
                      IF_CONS { SWAP ; DROP ; SOME } { NONE (pair (or (or unit unit) unit) address) } ;
                      IF_NONE { PUSH string "Missing actions for second player" ; FAILWITH } {} ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      IF_LEFT
                        { IF_LEFT
                            { DROP ;
                              IF_LEFT
                                { DIG 2 ;
                                  DROP ;
                                  IF_LEFT { DROP 2 ; NONE address } { DROP ; CDR ; SOME } }
                                { DROP 2 ; CDR ; SOME } }
                            { DROP ;
                              IF_LEFT
                                { SWAP ;
                                  DROP ;
                                  IF_LEFT { DROP ; CDR ; SOME } { DROP 2 ; NONE address } }
                                { DIG 2 ; DROP 2 ; CDR ; SOME } } }
                        { DROP ;
                          IF_LEFT
                            { IF_LEFT { DIG 2 ; DROP 2 ; CDR ; SOME } { DROP 2 ; CDR ; SOME } }
                            { DROP 3 ; NONE address } } ;
                      IF_NONE
                        { CAR ; CAR ; CDR ; NONE (option address) ; DIG 2 ; UPDATE }
                        { SWAP ; CAR ; CAR ; CDR ; SWAP ; SOME ; SOME ; DIG 2 ; UPDATE } ;
                      DIG 3 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      PAIR }
                    {} ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 GT ;
                 IF { DUP ;
                      CDR ;
                      CDR ;
                      EMPTY_MAP address nat ;
                      DUP 3 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      ITER { CDR ;
                             IF_NONE
                               {}
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE
                                   { SWAP ; PUSH nat 1 ; DIG 2 ; SWAP ; SOME ; SWAP ; UPDATE }
                                   { DIG 2 ; PUSH nat 1 ; DIG 2 ; ADD ; SOME ; DIG 2 ; UPDATE } } } ;
                      PUSH bool False ;
                      PUSH nat 0 ;
                      NONE address ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      ITER { SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             DUP ;
                             IF_NONE
                               { DROP 3 ;
                                 PUSH bool False ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 2 ;
                                 CAR ;
                                 SOME ;
                                 PAIR ;
                                 PAIR }
                               { DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 DUP 5 ;
                                 CDR ;
                                 COMPARE ;
                                 GT ;
                                 IF { DROP 3 ;
                                      PUSH bool False ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      DIG 2 ;
                                      CAR ;
                                      SOME ;
                                      PAIR ;
                                      PAIR }
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DIG 4 ;
                                      CDR ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DIG 2 ; DROP ; PUSH bool True ; DUG 2 ; PAIR ; PAIR }
                                         { PAIR ; PAIR } } } } ;
                      UNPAIR ;
                      CAR ;
                      SWAP ;
                      IF { DROP ; UNIT ; LEFT unit ; LEFT address }
                         { IF_NONE { UNIT ; LEFT unit ; LEFT address } { RIGHT (or unit unit) } } ;
                      DUP 3 ;
                      CDR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      CAR ;
                      PAIR }
                    {} ;
                 DUP 3 ;
                 CDR ;
                 SWAP ;
                 SOME ;
                 DIG 2 ;
                 CDR ;
                 CDR ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH string "Unknown session" ; FAILWITH } {} ;
                 PUSH string
                      "Must wait at least 600 seconds before claiming Victory (in case opponent is not playing)" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 GT ;
                 IF { DROP } { FAILWITH } ;
                 PUSH string "Not allowed to stop this session" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF { DROP } { FAILWITH } ;
                 PUSH string "this session is finished" ;
                 UNIT ;
                 RIGHT unit ;
                 LEFT address ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH string "SHOULD NOT BE HERE SESSION IS BROKEN" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 ITER { CDR ; PUSH bool False ; SWAP ; UPDATE } ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SIZE ;
                 COMPARE ;
                 GT ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      ITER { PUSH bool False ; SWAP ; UPDATE } ;
                      NIL address ;
                      SWAP ;
                      ITER { CONS } ;
                      IF_CONS { SWAP ; DROP ; SOME } { NONE address } ;
                      IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                      DUP 4 ;
                      CDR ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      RIGHT (or unit unit) ;
                      DUP 4 ;
                      CDR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 2 ;
                      CAR ;
                      PAIR ;
                      SOME ;
                      DIG 2 ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      NIL operation ;
                      PAIR }
                    { DROP ;
                      DUP ;
                      CAR ;
                      CDR ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH string "SHOULD NOT BE HERE SESSION IS BROKEN" ; FAILWITH } {} ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      ITER { CDR ; PUSH bool False ; SWAP ; UPDATE } ;
                      PUSH nat 0 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      SIZE ;
                      COMPARE ;
                      GT ;
                      IF { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           CAR ;
                           CAR ;
                           SWAP ;
                           ITER { PUSH bool False ; SWAP ; UPDATE } ;
                           NIL address ;
                           SWAP ;
                           ITER { CONS } ;
                           IF_CONS { SWAP ; DROP ; SOME } { NONE address } ;
                           IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                           DUP 4 ;
                           CDR ;
                           DUP 3 ;
                           CDR ;
                           CDR ;
                           DIG 2 ;
                           RIGHT (or unit unit) ;
                           DUP 4 ;
                           CDR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DIG 2 ;
                           CAR ;
                           PAIR ;
                           SOME ;
                           DIG 2 ;
                           UPDATE ;
                           SWAP ;
                           CAR ;
                           PAIR ;
                           NIL operation ;
                           PAIR }
                         { DROP 3 ; NIL operation ; PAIR } } } } } }

