{ parameter
    (or (pair %create_proposal
           (address %target_fa2)
           (list %transfers
              (pair (address %from_) (list %tx (pair (address %to_) (nat %token_id))))))
        (nat %sign)) ;
  storage
    (pair (pair (nat %proposal_counter)
                (big_map %proposal_map
                   nat
                   (pair (pair (pair (set %approved_signers address) (bool %executed))
                               (pair (nat %number_of_signers) (address %target_fa2)))
                         (pair (timestamp %timestamp)
                               (list %transfers
                                  (pair (address %from_) (list %tx (pair (address %to_) (nat %token_id)))))))))
          (pair (set %signers address) (nat %threshold))) ;
  code { PUSH string "Only one of the contract signer can create an proposal" ;
         NIL operation ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DUP 3 ;
             CDR ;
             CAR ;
             SENDER ;
             MEM ;
             IF { DROP } { FAILWITH } ;
             PUSH string "You must not send Tezos to the smart contract" ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             DUP ;
             CDR ;
             NOW ;
             PAIR ;
             SWAP ;
             CAR ;
             PUSH nat 1 ;
             PAIR ;
             PUSH bool False ;
             EMPTY_SET address ;
             PUSH bool True ;
             SENDER ;
             UPDATE ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP 4 ;
             CAR ;
             CAR ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DUP 3 ;
             CAR ;
             CAR ;
             PAIR ;
             CDR ;
             PUSH nat 1 ;
             DIG 3 ;
             CAR ;
             CAR ;
             ADD ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR }
           { DIG 3 ;
             DUP 3 ;
             CDR ;
             CAR ;
             SENDER ;
             MEM ;
             IF { DROP } { FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "No proposal exists for this counter" ; FAILWITH } {} ;
             PUSH string "You have already signed this proposal" ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             MEM ;
             NOT ;
             IF { DROP } { FAILWITH } ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             PUSH bool True ;
             SENDER ;
             UPDATE ;
             DUP 4 ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SIZE ;
             COMPARE ;
             GE ;
             IF { DIG 4 ;
                  DROP ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  PUSH nat 1 ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  ADD ;
                  PAIR ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CONTRACT %transfer
                    (list (pair (address %from_) (list %tx (pair (address %to_) (nat %token_id))))) ;
                  IF_NONE
                    { PUSH string "Cannot connect to the target transfer token entrypoint" ;
                      FAILWITH }
                    {} ;
                  PUSH mutez 0 ;
                  DIG 3 ;
                  CDR ;
                  CDR ;
                  TRANSFER_TOKENS ;
                  DUP 4 ;
                  CDR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  DUP 4 ;
                  CDR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  PUSH bool True ;
                  DIG 6 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  SOME ;
                  DIG 4 ;
                  UPDATE ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  NIL operation ;
                  DIG 2 ;
                  CONS ;
                  PAIR }
                { SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  PUSH nat 1 ;
                  DIG 4 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  ADD ;
                  PAIR ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  DUP 3 ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  CDR ;
                  DIG 2 ;
                  SOME ;
                  DIG 3 ;
                  UPDATE ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  PAIR } } } }

